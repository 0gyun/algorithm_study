/**
 * 2023.06.20
 * 
 * 백준 9095번 문제 (https://www.acmicpc.net/problem/9095)
 * 
 * 정수 4를 1, 2, 3의 합으로 나타내는 방법은 총 7가지가 있다. 합을 나타낼 때는 수를 1개 이상 사용해야 한다.
 * 1+1+1+1
 * 1+1+2
 * 1+2+1
 * 2+1+1
 * 2+2
 * 1+3
 * 3+1
 * 정수 n이 주어졌을 때, n을 1, 2, 3의 합으로 나타내는 방법의 수를 구하는 프로그램을 작성하시오.
 * 
 * 입력
 * 
 * 첫째 줄에 테스트 케이스의 개수 T가 주어진다. 
 * 각 테스트 케이스는 한 줄로 이루어져 있고, 정수 n이 주어진다. 
 * n은 양수이며 11보다 작다.
 * 
 * 출력
 * 
 * 각 테스트 케이스마다, n을 1, 2, 3의 합으로 나타내는 방법의 수를 출력한다.
*/
#include <iostream>
#include <vector>
using namespace std;


int main()
{
    int T;
    scanf("%d", &T);
    
    vector<int> no_sums(12,1);

    /**
     * 이번 문제도 DP를 이용한다.
     * 
     * 1, 2, 3을 이용해서 표현해야 하므로 어떻게 작은 문제로 쪼갤까 고민하다가 1부터 구현하는 방법을 생각했다.
     * 임의의 수 n을 표현할 때, 어떤 수를 더해서 n이 만들어졌는지를 생각했다.
     * n-1에서 1을 더하면 n이 되고, n-2에서 2를 더하면 n이 되고, n-3에서 3을 더하면 n이 되므로
     * n-1의 표현 방법 + n-2의 표현 방법 + n-3의 표현 방법이 결국 n의 표현 방법의 수가 된다는 점을 알 수 있었다.
     * 
    */
    for(int i = 1; i <= 11; i++)
    {
        int no = 0;
        
        no += no_sums[i-1]; // 1을 더하는 경우의 수
        if(i - 2 >= 0) no += no_sums[i-2]; // 2를 더하는 경우의 수
        if(i - 3 >= 0) no += no_sums[i-3]; // 3을 더하는 경우의 수

        no_sums[i] = no;
    }

    for(int i = 0; i < T; i++)
    {
        int n;
        scanf("%d", &n);
        printf("%d\n", no_sums[n]);
    }
}